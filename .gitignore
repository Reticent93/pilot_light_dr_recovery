<<<<<<< HEAD
# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
=======
# Terraform core
.terraform/
*.tfstate
*.tfstate.*
*.terraform.lock.hcl

# Sensitive data files
terraform.tfvars
*.auto.tfvars
*.tfvars
variables.tf.json
secrets.tf

# Credentials and keys
*.pem
*.key
*.pub
*.crt
*.cer
aws_credentials
.aws/credentials

# Environment files
.env
.env.local
.env.production
.env.development

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS metadata
.DS_Store
Thumbs.db

# Logs
*.log
terraform.log
debug.log

# Plan outputs
*.tfplan
plan.out
apply.out

# Backup files
backup/
*.backup

# Local modules
modules/local/
temp/

# Test files
test/
*.test
fixtures/

.terraform/
.terraform.lock.hcl
.terraform/
>>>>>>> b943b47 (initial commit)
